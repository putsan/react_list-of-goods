{"version":3,"sources":["components/MyButton.js","components/ListOfGoods/ListOfGoods.js","App.js","index.js"],"names":["MyButton","React","memo","text","onClick","variant","Button","type","className","propTypes","PropTypes","string","isRequired","func","defaultProps","ListOfGoods","goods","defaultLength","setLength","FormControl","as","size","name","value","onChange","map","item","i","key","Math","random","ListGroup","duration","easing","good","Item","arrayOf","number","goodsFromServer","App","state","isVisible","isReversed","isSorted","showList","setState","reverseList","sortListByABC","sortListByLength","resetList","event","target","this","newGoods","filter","length","sort","g1","g2","localeCompare","reverse","Jumbotron","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70c1f8cd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\n\nexport const MyButton = React.memo(\n  ({ text, onClick, variant }) => (\n    <Button\n      type=\"button\"\n      onClick={onClick}\n      variant={variant}\n      className=\"rounded-pill m-2\"\n    >\n      {text}\n    </Button>\n  ),\n);\n\nMyButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  variant: PropTypes.string,\n};\n\nMyButton.defaultProps = {\n  variant: 'outline-success',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FlipMove from 'react-flip-move';\nimport { ListGroup, FormControl } from 'react-bootstrap';\n\nimport './ListOfGoods.scss';\n\nexport const ListOfGoods = React.memo(\n  ({ goods, defaultLength, setLength }) => (\n    <>\n      <FormControl\n        as=\"select\"\n        size=\"sm\"\n        name=\"lengths\"\n        value={defaultLength}\n        onChange={setLength}\n        className=\"js-container\"\n      >\n        {goods.map((item, i) => (\n          <option value={i + 1} key={Math.random()}>\n            {i + 1}\n          </option>\n        ))}\n      </FormControl>\n\n      <ListGroup className=\"js-container\">\n        <FlipMove\n          duration={800}\n          easing=\"ease-out\"\n        >\n          {goods.map(good => (\n            <ListGroup.Item\n              key={good}\n              variant=\"success\"\n              className=\"rounded-pill my-1 py-1\"\n            >\n              {good}\n            </ListGroup.Item>\n          ))}\n        </FlipMove>\n      </ListGroup>\n    </>\n  ),\n);\n\nListOfGoods.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n  defaultLength: PropTypes.number,\n  setLength: PropTypes.func.isRequired,\n};\n\nListOfGoods.defaultProps = {\n  defaultLength: 1,\n};\n","import React from 'react';\nimport { Jumbotron } from 'react-bootstrap';\nimport { MyButton } from './components/MyButton';\nimport { ListOfGoods } from './components/ListOfGoods/ListOfGoods';\n\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.PureComponent {\n  state = {\n    isVisible: false,\n    isReversed: false,\n    isSorted: false,\n    defaultLength: 1,\n  }\n\n  showList = () => {\n    this.setState(state => ({\n      isVisible: !state.isVisible,\n    }));\n  }\n\n  reverseList = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  }\n\n  sortListByABC = () => {\n    this.setState({\n      isSorted: 'alphabet',\n      isReversed: false,\n    });\n  }\n\n  sortListByLength = () => {\n    this.setState({\n      isSorted: 'length',\n      isReversed: false,\n    });\n  }\n\n  resetList = () => {\n    this.setState({\n      isReversed: false,\n      isSorted: false,\n      defaultLength: 1,\n    });\n  }\n\n  setLength = (event) => {\n    this.setState({\n      defaultLength: +event.target.value,\n    });\n  }\n\n  render() {\n    const {\n      isVisible,\n      isReversed,\n      isSorted,\n      defaultLength,\n    } = this.state;\n    const newGoods = goodsFromServer\n      .filter(good => good.length >= defaultLength);\n\n    if (isSorted) {\n      newGoods.sort((g1, g2) => {\n        if (isSorted === 'length') {\n          return g1.length - g2.length;\n        }\n\n        return g1.localeCompare(g2);\n      });\n    }\n\n    if (isReversed) {\n      newGoods.reverse();\n    }\n\n    return (\n      <Jumbotron className=\"App text-center js-container\">\n        <h1 className=\"display-4\">Goods</h1>\n\n        {!isVisible && (\n          <MyButton\n            onClick={this.showList}\n            text=\"Start\"\n          />\n        )}\n\n        {isVisible && (\n          <>\n            <MyButton\n              onClick={this.reverseList}\n              text=\"Reverse\"\n            />\n\n            <MyButton\n              onClick={this.sortListByABC}\n              text=\"Sort alphabetically\"\n            />\n\n            <MyButton\n              onClick={this.sortListByLength}\n              text=\"Sort by length\"\n            />\n\n            <MyButton\n              onClick={this.resetList}\n              text=\"Reset\"\n              variant=\"outline-danger\"\n            />\n\n            <ListOfGoods\n              goods={newGoods}\n              defaultLength={defaultLength}\n              setLength={this.setLength}\n            />\n          </>\n        )}\n      </Jumbotron>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}