{"version":3,"sources":["components/Button.js","App.js","index.js"],"names":["MyButton","this","props","text","onClick","Button","type","variant","className","React","PureComponent","goodsFromServer","App","state","goods","isVisible","isReversed","isSorted","defaultLength","showList","setState","reverseList","sortListByABC","sortListByLength","resetList","setLength","event","target","value","newGoods","filter","good","length","sort","g1","g2","localeCompare","reverse","Jumbotron","FormControl","as","size","name","onChange","map","item","i","key","Math","random","ListGroup","duration","easing","Item","ReactDOM","render","document","getElementById"],"mappings":"ySAIaA,EAAb,uKACY,IAAD,EACmBC,KAAKC,MAAvBC,EADD,EACCA,KAAMC,EADP,EACOA,QAEd,OACE,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLF,QAASA,EACTG,QAAQ,kBACRC,UAAU,oBAETL,OAXT,GAA8BM,IAAMC,eCG9BC,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAsHaC,E,4MAlHbC,MAAQ,CACNC,MAAOH,EACPI,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,cAAe,G,EAGjBC,SAAW,WACT,EAAKC,UAAS,SAAAP,GAAK,MAAK,CAAEE,WAAYF,EAAME,e,EAG9CM,YAAc,WACZ,EAAKD,UAAS,SAAAP,GAAK,MAAK,CAAEG,YAAaH,EAAMG,gB,EAG/CM,cAAgB,WACd,EAAKF,SAAS,CAAEH,SAAU,c,EAG5BM,iBAAmB,WACjB,EAAKH,SAAS,CAAEH,SAAU,Y,EAG5BO,UAAY,WACV,EAAKJ,SAAS,CACZJ,YAAY,EACZC,UAAU,EACVC,cAAe,K,EAInBO,UAAY,SAACC,GACX,EAAKN,SAAS,CAAEF,cAAeQ,EAAMC,OAAOC,S,uDAGpC,IAAD,EAOH3B,KAAKY,MALPC,EAFK,EAELA,MACAC,EAHK,EAGLA,UACAC,EAJK,EAILA,WACAC,EALK,EAKLA,SACAC,EANK,EAMLA,cAEIW,EAAWf,EAAMgB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUd,KAgBrD,OAdID,GACFY,EAASI,MAAK,SAACC,EAAIC,GACjB,MAAiB,WAAblB,EACKiB,EAAGF,OAASG,EAAGH,OAGjBE,EAAGE,cAAcD,MAIxBnB,GACFa,EAASQ,UAIT,kBAACC,EAAA,EAAD,CAAW9B,UAAU,gCACnB,wBAAIA,UAAU,aAAd,UAEEO,GAAa,kBAAC,EAAD,CAAUX,QAASH,KAAKkB,SAAUhB,KAAK,UAErDY,GACC,oCACE,kBAAC,EAAD,CAAUX,QAASH,KAAKoB,YAAalB,KAAK,YAE1C,kBAAC,EAAD,CAAUC,QAASH,KAAKqB,cAAenB,KAAK,wBAE5C,kBAAC,EAAD,CAAUC,QAASH,KAAKuB,UAAWrB,KAAK,UAExC,kBAAC,EAAD,CAAUC,QAASH,KAAKsB,iBAAkBpB,KAAK,mBAE/C,kBAACoC,EAAA,EAAD,CACEC,GAAG,SACHC,KAAK,KACLC,KAAK,UACLd,MAAOV,EACPyB,SAAU1C,KAAKwB,UACfjB,UAAU,gBAETG,EAAgBiC,KAAI,SAACC,EAAMC,GAAP,OACnB,4BAAQlB,MAAOkB,EAAI,EAAGC,IAAKC,KAAKC,UAC7BH,EAAI,OAKX,kBAACI,EAAA,EAAD,CAAW1C,UAAU,gBACnB,kBAAC,IAAD,CACE2C,SAAU,IACVC,OAAO,YAENvB,EAASe,KAAI,SAAAb,GAAI,OAChB,kBAACmB,EAAA,EAAUG,KAAX,CACEN,IAAKhB,EACLxB,QAAQ,UACRC,UAAU,0BAETuB,c,GAvGHtB,IAAMC,e,MCdxB4C,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.70da5ebc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\n\nexport class MyButton extends React.PureComponent {\n  render() {\n    const { text, onClick } = this.props;\n\n    return (\n      <Button\n        type=\"button\"\n        onClick={onClick}\n        variant=\"outline-success\"\n        className=\"rounded-pill m-2\"\n      >\n        {text}\n      </Button>\n    );\n  }\n}\n\nMyButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport FlipMove from 'react-flip-move';\nimport { ListGroup, FormControl, Jumbotron } from 'react-bootstrap';\nimport { MyButton } from './components/Button';\n\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.PureComponent {\n  state = {\n    goods: goodsFromServer,\n    isVisible: false,\n    isReversed: false,\n    isSorted: false,\n    defaultLength: 1,\n  }\n\n  showList = () => {\n    this.setState(state => ({ isVisible: !state.isVisible }));\n  }\n\n  reverseList = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  }\n\n  sortListByABC = () => {\n    this.setState({ isSorted: 'alphabet' });\n  }\n\n  sortListByLength = () => {\n    this.setState({ isSorted: 'length' });\n  }\n\n  resetList = () => {\n    this.setState({\n      isReversed: false,\n      isSorted: false,\n      defaultLength: 1,\n    });\n  }\n\n  setLength = (event) => {\n    this.setState({ defaultLength: event.target.value });\n  }\n\n  render() {\n    const {\n      goods,\n      isVisible,\n      isReversed,\n      isSorted,\n      defaultLength,\n    } = this.state;\n    const newGoods = goods.filter(good => good.length >= defaultLength);\n\n    if (isSorted) {\n      newGoods.sort((g1, g2) => {\n        if (isSorted === 'length') {\n          return g1.length - g2.length;\n        }\n\n        return g1.localeCompare(g2);\n      });\n    }\n\n    if (isReversed) {\n      newGoods.reverse();\n    }\n\n    return (\n      <Jumbotron className=\"App text-center js-container\">\n        <h1 className=\"display-4\">Goods</h1>\n\n        {!isVisible && <MyButton onClick={this.showList} text=\"Start\" />}\n\n        {isVisible && (\n          <>\n            <MyButton onClick={this.reverseList} text=\"Reverse\" />\n\n            <MyButton onClick={this.sortListByABC} text=\"Sort alphabetically\" />\n\n            <MyButton onClick={this.resetList} text=\"Reset\" />\n\n            <MyButton onClick={this.sortListByLength} text=\"Sort by length\" />\n\n            <FormControl\n              as=\"select\"\n              size=\"sm\"\n              name=\"lengths\"\n              value={defaultLength}\n              onChange={this.setLength}\n              className=\"js-container\"\n            >\n              {goodsFromServer.map((item, i) => (\n                <option value={i + 1} key={Math.random()}>\n                  {i + 1}\n                </option>\n              ))}\n            </FormControl>\n\n            <ListGroup className=\"js-container\">\n              <FlipMove\n                duration={800}\n                easing=\"ease-out\"\n              >\n                {newGoods.map(good => (\n                  <ListGroup.Item\n                    key={good}\n                    variant=\"success\"\n                    className=\"rounded-pill my-1 py-1\"\n                  >\n                    {good}\n                  </ListGroup.Item>\n                ))}\n              </FlipMove>\n            </ListGroup>\n          </>\n        )}\n      </Jumbotron>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}